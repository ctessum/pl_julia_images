using Pkg

Pkg.add("PackageCompiler")

using PackageCompiler

Pkg.activate("/jl")

pkgs = [
    "AbstractFFTs",
    "BSON",
    "Base64",
    "CSV",
    "ColorSchemes",
    "ColorVectorSpace",
    "Colors",
    "ContinuousWavelets",
    "DataFrames",
    "Dates",
    "DiffEqSensitivity",
    "DifferentialEquations",
    "Distributions",
    "Downloads",
    "FFTW",
    "FileIO",
    "FixedPointNumbers",
    "Flux",
    "ForwardDiff",
    "Grader",
    "HDF5",
    "HDF5_jll",
    "HypertextLiteral",
    "ImageIO",
    "ImageMagick",
    "ImageShow",
    "ImageTransformations",
    "Images",
    "InteractiveUtils",
    "LaTeXStrings",
    "LinearAlgebra",
    "MAT",
    "MD5",
    "MLUtils",
    "Markdown",
    "Measures",
    "ModelingToolkit",
    "MultivariateStats",
    "NetCDF",
    "PNGFiles",
    "Plots",
    "Pluto",
    "PlutoUI",
    "ProgressLogging",
    "RDatasets",
    "Random",
    "SHA",
    "SafeTestsets",
    "SpecialFunctions",
    "Statistics",
    "StatsBase",
    "StatsPlots",
    "Tables",
    "Unitful",
    "VideoIO",
    "Zygote",
]

# precompile_statements_file generated by ../../pl-cee498ds/precompile_statements.sh
create_sysimage(pkgs; sysimage_path="/jl_depot/sysimage.so",
    precompile_statements_file="/jl/precompile_statements.jl")